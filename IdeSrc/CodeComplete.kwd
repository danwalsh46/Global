<KeyWord=Add/>
<Code=Add {value} To {variable}/>
<KeyWord=Case/>
<Code=Case Begin /n/tCase ({expression1}) /n/t/t{statement1} /n/t/tCase Break /n/tCase ({expression2}) /n/t/t{statement2} /n/t/tCase Break /n/tCase Else /n/t/t{ElseStatement} /nCase End/>
<KeyWord=Class/>
<Code=Class {ClassName} is a {SuperClass} /n/tProcedure Construct_Object /n/t/tForward Send Construct_Object /n/tEnd_Procedure /nEnd_Class/>
<KeyWord=Enum_List/>
<Code=Enum_List /n/tDefine {symbol} /n/tDefine {symbol} /nEnd_Enum_List/>
<KeyWord=For/>
<Code=For {ControlVariable} From {InitialVal} To {FinalVal} /nLoop/>
<KeyWord=Function/>
<Code=Function {FunctionName} {type} {arg} Returns {ReturnType} /n/tFunction_Return {ReturnExpression} /nEnd_Function/>
<KeyWord=Get/>
<Code=Get {PropertyName} of {ObjectID}  {param1 ... paramN} To {ReceivingVariable}/>
<KeyWord=If/>
<Code=If ({expression}) Begin /nEnd /nElse Begin /nEnd/>
<KeyWord=Move/>
<Code=Move {expression} To {variable}/>
<KeyWord=Object/>
<Code=Object {ObjectName} is a {Class} /nEnd_Object/>
<KeyWord=On_Key/>
<Code=On_Key {KeyName} Send {message} of {objectId}/>
<KeyWord=Procedure/>
<Code=Procedure {MethodName} {type} {argument} /nEnd_Procedure/>
<KeyWord=Property/>
<Code=Property {type} {name} {InitialValue}/>
<KeyWord=Repeat/>
<Code=Repeat /nUntil {BooleanExpression}/>
<KeyWord=Send/>
<Code=Send {Message} of {ObjectId} {arg1 ... argN}/>
<KeyWord=Set/>
<Code=Set {PropertyName} of {ObjectID}  {param1 ... paramN} To {Variable}/>
<KeyWord=Subtract/>
<Code=Subtract {value} From {variable}/>
<KeyWord=While/>
<Code=While ({expression}) /nLoop/>
